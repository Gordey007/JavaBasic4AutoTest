package com.gordeyvasilev.theory58blocksInitializations;

public class Car {
    private static int numOfCars;

    //    Code duplication
    //public Car() {
    //    numOfCars++;
    //}
    //public Car(String model) {
    //    numOfCars++;
    //}

    // Dynamic initialization block
    // Чтобы избежать дублирования, следует вынести общий код из конструкторов в динамический блок


    // Динамические блоки исполняются только тогда, когда создается объект класса. Поэтому динамические блоки могут
    // использоваться для настройки начального состояния объекта.
    {
        numOfCars++;
    }

    public Car() {
    }

    public Car(String model) {
    }

    /**
     * Сборка мусора осуществляется лишь время от времени по ходу исполнения программы. Она не выполняется сразу же
     * после обнаружения объектов, которые больше не используются. Обычно, во избежание снижения производительности,
     * сборка мусора выполняется лишь при выполнении двух условий: существуют объекты, подлежащие удалению, и есть
     * необходимость освободить занимаемую ими память.
     * */

    /**
     * В Java предусмотрена возможность определить метод-финализатор – finalize(),
     * который будет вызван перед окончательным удалением объекта из памяти. Он позволяет убедиться в том, что объект
     * можно безболезненно удалить.
     *
     * Чтобы добавить в класс финализатор, достаточно переопределить в нем метод finalize(), унаследованный от класса
     * Object. Исполняющая система Java вызовет этот метод перед фактическим удалением объекта.
     * В теле метода finalize() следует предусмотреть действия, которые должны быть выполнены непосредственно перед
     * удалением объекта.
     * */

    /**
     * - ключевое слово protected предотвращает доступ к методу за пределами класса
     * - метод вызывается тогда, когда система сборки мусора принимает решение об освобождении памяти,
     * занимаемой данным объектом
     * - если объект в это время оказывается вне области видимости, то метод не будет вызван
     * (например, если программа успеет завершиться до того, как будет запущена сборка мусора,
     * то вызова метода не произойдет).
     */
    protected void finalize() {

    }
}